{"version":3,"file":"static/js/633.a7a36397.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/Details/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/Details/MovieDetails.module.css?3902"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ffed898cd5cef6f73a1a7d7b5f4a44a3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst get = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, {\n      params: { ...params, api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.status_message || 'Something went wrong'\n    );\n  }\n};\n\nexport const getTrendingMovies = () => {\n  const url = `${BASE_URL}/trending/movie/day`;\n  return get(url);\n};\n\n\nexport const searchMovies = query => {\n  const url = `${BASE_URL}/search/movie`;\n  const params = { query };\n  return get(url, params);\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}`;\n  return get(url);\n};\n\nexport const getMovieCredits = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits`;\n  return get(url);\n};\n\nexport const getMovieReviews = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews`;\n  return get(url);\n};","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate, Outlet } from 'react-router-dom';\nimport {\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n} from '../Api/Api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\nconst { movieId } = useParams();\nconst [movie, setMovie] = useState(null);\nconst [setCast] = useState([]);\nconst [setReviews] = useState([]);\nconst navigate = useNavigate();\nconst [activeTab] = useState(null);\n\nuseEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movieData = await getMovieDetails(movieId);\n        const castData = await getMovieCredits(movieId);\n        setMovie(movieData);\n        setCast(castData.cast);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      }\n    };\n\nfetchData();\n  }, [setCast,movieId]);\n\nuseEffect(() => {\nconst fetchReviews = async () => {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    if (activeTab === 'reviews') {\n      fetchReviews();\n    }\n}, [movieId, activeTab, setReviews]);\n  \n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await getMovieCredits(movieId);\n        setCast(castData.cast);\n      } catch (error) {\n        console.log('Error fetching movie cast:', error);\n      }\n    };\n\n    if (activeTab === 'cast') {\n      fetchCast();\n    }\n  }, [movieId, activeTab, setCast]);\n\nconst getYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n\nconst getGenres = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\nconst handleGoBack = () => {\n    navigate('/');\n  };\n\n\n\n  return (\n    <>\n      <div className={css.movieDetails}>\n        <button className={css.goBack} onClick={handleGoBack}>\n          <Link to=\"/\" className={css.linkStyle}>\n            &larr; Go Back\n          </Link>\n        </button>\n\n        {movie && (\n          <>\n            <div className={css.movieInfo}>\n              <div className={css.moviePoster}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={movie.original_title}\n                  className={css.posterImage}\n                />\n              </div>\n              <div>\n                <h1>\n                  {movie.original_title} ({getYear(movie.release_date)})\n                </h1>\n                <h2 className={css.movieDescr}>User Score: {movie.vote_average * 10}%</h2>\n                <h2 className={css.movieDescr}>Overview</h2>\n                <p>{movie.overview}</p>\n                <h2 className={css.movieDescr}>Genres</h2>\n                <p>{getGenres(movie.genres)}</p>\n              </div>\n            </div>\n\n            <div>\n              <div className={css.tabs}>\n                <ul>\n                  <li>\n                    <Link\n                      to={`/movies/${movieId}/cast`}\n                      className={css.castButton}\n                    >\n                      Cast\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      to={`/movies/${movieId}/reviews`}\n                     \n                    >\n                      Reviews\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n              <Outlet />\n              \n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__suW9P\",\"goBack\":\"MovieDetails_goBack__9CVK-\",\"movieSection\":\"MovieDetails_movieSection__TuShq\",\"movieDescr\":\"MovieDetails_movieDescr__dXIoJ\",\"movieInfo\":\"MovieDetails_movieInfo__6PYb1\",\"moviePoster\":\"MovieDetails_moviePoster__ZzjKA\",\"posterImage\":\"MovieDetails_posterImage__3BtNW\",\"tabs\":\"MovieDetails_tabs__CEmG6\",\"castSection\":\"MovieDetails_castSection__7Hm2H\",\"reviewsSection\":\"MovieDetails_reviewsSection__u3PDY\",\"castItem\":\"MovieDetails_castItem__JBYTw\",\"castImage\":\"MovieDetails_castImage__zKavy\",\"linkStyle\":\"MovieDetails_linkStyle__QsqLX\",\"castButton\":\"MovieDetails_castButton__aRyFT\",\"castMargin\":\"MovieDetails_castMargin__QzmhJ\",\"reviewsMargin\":\"MovieDetails_reviewsMargin__LyS6a\"};"],"names":["API_KEY","BASE_URL","get","async","url","params","arguments","length","undefined","axios","api_key","data","error","_error$response","_error$response$data","Error","response","status_message","getTrendingMovies","concat","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","MovieDetails","useParams","movie","setMovie","useState","setCast","setReviews","navigate","useNavigate","activeTab","useEffect","movieData","castData","cast","console","log","fetchData","reviewsData","results","fetchReviews","fetchCast","_jsx","_Fragment","children","_jsxs","className","css","onClick","handleGoBack","Link","to","src","poster_path","alt","original_title","releaseDate","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","Outlet"],"sourceRoot":""}