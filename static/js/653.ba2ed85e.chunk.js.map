{"version":3,"file":"static/js/653.ba2ed85e.chunk.js","mappings":"mMAEA,MAAMA,EAAU,mCACVC,EAAW,+BAEXC,EAAMC,eAAOC,GAAsB,IAAjBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChC,IAIE,aAHuBG,EAAAA,EAAAA,IAAUL,EAAK,CACpCC,OAAQ,IAAKA,EAAQK,QAASV,MAEhBW,IAKlB,CAJE,MAAOC,GAAQ,IAADC,EAAAC,EACd,MAAM,IAAIC,OACM,QAAdF,EAAAD,EAAMI,gBAAQ,IAAAH,GAAM,QAANC,EAAdD,EAAgBF,YAAI,IAAAG,OAAN,EAAdA,EAAsBG,iBAAkB,uBAE5C,CACF,EAEaC,EAAoBA,KAC/B,MAAMd,EAAG,GAAAe,OAAMlB,EAAQ,uBACvB,OAAOC,EAAIE,EAAI,EAIJgB,EAAeC,IAC1B,MAAMjB,EAAG,GAAAe,OAAMlB,EAAQ,iBAEvB,OAAOC,EAAIE,EADI,CAAEiB,SACM,EAGZC,EAAkBC,IAC7B,MAAMnB,EAAG,GAAAe,OAAMlB,EAAQ,WAAAkB,OAAUI,GACjC,OAAOrB,EAAIE,EAAI,EAGJoB,EAAkBD,IAC7B,MAAMnB,EAAG,GAAAe,OAAMlB,EAAQ,WAAAkB,OAAUI,EAAO,YACxC,OAAOrB,EAAIE,EAAI,EAGJqB,EAAkBF,IAC7B,MAAMnB,EAAG,GAAAe,OAAMlB,EAAQ,WAAAkB,OAAUI,EAAO,YACxC,OAAOrB,EAAIE,EAAI,C,4ECzCjB,QAA6D,2BAA7D,EAAsG,4BAAtG,EAAiJ,6BAAjJ,EAA0L,0BAA1L,EAAgO,0BAAhO,EAAgT,0BAAhT,EAA4V,gCAA5V,EAA2Y,6B,aCK3Y,MA0DA,EA1DesB,KACb,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GAwB3C,OACEK,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAoBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAAC,mBACjCH,EAAAA,EAAAA,MAAA,QAAMK,SAzBWpC,UAGnB,GAFAqC,EAAEC,iBAEGd,EAAYe,OAIjB,IACE,MAAM1B,QAAiBI,EAAAA,EAAAA,IAAaO,GAEhCX,GAAYA,EAAS2B,SACvBZ,EAAiBf,EAAS2B,SAC1BV,EAAyC,IAA5BjB,EAAS2B,QAAQpC,UAE9B0B,GAAa,GACbF,EAAiB,IAIrB,CAFE,MAAOnB,GACPgC,QAAQC,IAAI,0BAA2BjC,EACzC,GAMgCuB,UAAWC,EAAeC,SAAA,EACtDC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLC,MAAOpB,EACPqB,SAAUR,GAAKZ,EAAeY,EAAES,OAAOF,OACvCG,YAAY,sBACZf,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASX,UAAWC,EAAiBC,SAAC,cAIpDL,IAAaM,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAcC,SAAC,qBAC1CP,EAAcvB,OAAS,EACtBuB,EAAcqB,KAAIC,IAChBd,EAAAA,EAAAA,KAAA,OAAoBH,UAAWC,EAAcC,UAC3CC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAE,WAAAnC,OAAaiC,EAAMG,IAAMpB,UAAWC,EAAcC,UACxDC,EAAAA,EAAAA,KAAA,MAAAD,SAAKe,EAAMI,WAFLJ,EAAMG,OAOjBvB,IAAaM,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAcC,SAAC,uBAEzC,C","sources":["Api.js","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ffed898cd5cef6f73a1a7d7b5f4a44a3';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst get = async (url, params = {}) => {\n  try {\n    const response = await axios.get(url, {\n      params: { ...params, api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(\n      error.response?.data?.status_message || 'Something went wrong'\n    );\n  }\n};\n\nexport const getTrendingMovies = () => {\n  const url = `${BASE_URL}/trending/movie/day`;\n  return get(url);\n};\n\n\nexport const searchMovies = query => {\n  const url = `${BASE_URL}/search/movie`;\n  const params = { query };\n  return get(url, params);\n};\n\nexport const getMovieDetails = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}`;\n  return get(url);\n};\n\nexport const getMovieCredits = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/credits`;\n  return get(url);\n};\n\nexport const getMovieReviews = movieId => {\n  const url = `${BASE_URL}/movie/${movieId}/reviews`;\n  return get(url);\n};","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__tPRCM\",\"searchForm\":\"Movies_searchForm__S-9T7\",\"searchInput\":\"Movies_searchInput__+E-Mw\",\"searchButton\":\"Movies_searchButton__VlmGO\",\"movieLink\":\"Movies_movieLink__e75lb\",\"movieItem\":\"Movies_movieItem__WBe6u\",\"moviePoster\":\"Movies_moviePoster__8wnP9\",\"noResults\":\"Movies_noResults__LUzU2\",\"moviesContainer\":\"Movies_moviesContainer__D1+tn\",\"search_title\":\"Movies_search_title__YJpHX\"};","import React, { useState } from 'react';\nimport { searchMovies } from '../../Api';\nimport { Link } from 'react-router-dom';\n\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [noResults, setNoResults] = useState(false);\n\n  const handleSearch = async e => {\n    e.preventDefault();\n\n    if (!searchQuery.trim()) {\n      return; \n    }\n\n    try {\n      const response = await searchMovies(searchQuery);\n\n      if (response && response.results) {\n        setSearchResults(response.results);\n        setNoResults(response.results.length === 0);\n      } else {\n        setNoResults(true);\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.log('Error searching movies:', error);\n    }\n  };\n\n  return (\n    <div className={css.moviesContainer}>\n      <h1 className={css.search_title}>Search Movies</h1>\n      <form onSubmit={handleSearch} className={css.searchForm}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          placeholder=\"Enter a movie title\"\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          Search\n        </button>\n      </form>\n      {noResults && <p className={css.noResults}>No results found</p>}\n      {searchResults.length > 0 ? (\n        searchResults.map(movie => (\n          <div key={movie.id} className={css.movieItem}>\n            <Link to={`/movies/${movie.id}`} className={css.movieLink}>\n              <h3>{movie.title}</h3>\n            </Link>\n          </div>\n        ))\n      ) : (\n        !noResults && <p className={css.noResults}>No results found</p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","get","async","url","params","arguments","length","undefined","axios","api_key","data","error","_error$response","_error$response$data","Error","response","status_message","getTrendingMovies","concat","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","Movies","searchQuery","setSearchQuery","useState","searchResults","setSearchResults","noResults","setNoResults","_jsxs","className","css","children","_jsx","onSubmit","e","preventDefault","trim","results","console","log","type","value","onChange","target","placeholder","map","movie","Link","to","id","title"],"sourceRoot":""}